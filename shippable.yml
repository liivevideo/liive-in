language: node_js
  # deploy-web s3 copy, AWS_ACCESS_KEY, AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY
  - secure: vcrktOMG3F5RfeCoztVpkuEQGNhmN5Dk4X/S0JTih+qgrd4hechlkjGe37j7xMLCP6mbQ0r4xYnFqiF170TbHkv5wijg6d97r/7xr8J8PdZCN9MXwJUPE7C3XTay7pA2Tf24gE0yV3+eW8kG5YJoipFpV1Yr0+opae1CgsbtE0RUu/t7JAj9DIE9C/LC5ima/3zidmZO5MxgcrwvhEOpTtByy5WF0VBL7VRXe77hy6YLqEPrGdBgNPchbOEyPOyq8QGV7Ux+Jx9epDlFlIRxT7pocvTBAlOjRYgJraEyauol0przP0fuEAd4dnOM8uisdXijOrrkRsha4oNkbSEAuA==
  - secure: kenBGtdvjiSWgksDX8NfuCKyST2HaD7t3HD4KVS77X6Shz4HVJgRHuWO9yzSEd07MC85kIgcNk1/watgo7PY85L9Aja/jf/8O7p1rI9jiOuOMJqL2jVFnBtoox3kRKEaErFyeUgr3Q0hoG3oIMLN1/n2QceygSvxMfT/gDIapdwbOdMSoYOCw0pycZYOheB3bsAtUpxhh93VhDQ4v2KlzPiyr6dnE32KU8Omu749QEpLCDZcwovxDL6KZG3SEmTvx7uVJUEo56qIeEtaGX8jZaZYWbQvRxbKZCpLygwngwbt4pP9kW4g76PmcwQIw1j9QSeAa0q1cSDNzgLHWgs8iA==
  - secure: CUZNXTf+bJgqX+2SFVRhubrRE/OqaLxMietJXxz/6xS6IK8yzY3j/XdPe3beKNCiHbA/4VJkXtuhZYA92TXIfJUJ3tTNTWjdFQLy5ciHR9lcAc3Ay0Sc+e2MseObA7RahBs3bvxGzhkNf7ACPIEgI4e6pjGV0Q59838+aXlVEnoJV0sBuaBTsqO/T/u/dI7LMqslnfaPHnH3rGjpXqS7VrE+9Ctd/DMf2FrFHBXBHDZFDSD4I5vwuv9xuw0kV+ovuOs5vhBUIVAkfCsN0a970eWNAmAyWVPVmaHjtvqa4FNcjo3Y9lbMyV+s79smHjhkD/Tx/72fP3AClUXRgoaUVg==

node_js:
   - "6.2.2"

install:
  - pip install awscli

build:
  pre_ci:
    - mkdir -p shippable/testresults
    - mkdir -p shippable/codecoverage

  ci:
    - npm install
    - npm test

  post_ci:
    - npm run-script test-shippable
    - npm run-script test-coverage
    - npm run-script shippable-cobertura

  on_failure:
    - npm run-script test-shippable
    - npm run-script test-coverage
    - npm run-script shippable-cobertura

  on_success:
    - if [ "$BRANCH" == "master" ]; then echo "master build"; fi
    - if [ "$BRANCH" == "deploy-web" ]; then source web/deploy.sh; fi
    - if [ "$BRANCH" == "deploy-android" ]; then source android/deploy.sh; fi
    - if [ "$BRANCH" == "deploy-ios" ]; then source ios/deploy.sh; fi
    - if [ "$BRANCH" == "deploy-server" ]; then source server/deploy.sh; fi
    - if [ "$BRANCH" == "deploy-chromeos" ]; then source chromeos/deploy.sh; fi
    - if [ "$BRANCH" == "publish-web" ]; then source web/publish.sh; fi
    - if [ "$BRANCH" == "publish-android" ]; then source android/publish.sh; fi
    - if [ "$BRANCH" == "publish-ios" ]; then source ios/publish.sh; fi
    - if [ "$BRANCH" == "publish-server" ]; then source server/publish.sh; fi
    - if [ "$BRANCH" == "publish-chromeos" ]; then source chromeos/publish.sh; fi
integrations:
  key:
    - integrationName: HerokuSSHKey
      type: ssh-key

  notifications:
    - integrationName: CINotification
      type: slack
      recipients:
        - "#ci"
      branches:
        only:
          - master
          - develop
      on_success: change
      on_failure: always
      on_start: never

    - integrationName: email
      type: email
      recipients:
        - robb@liivevideo.com
      branches:
        only:
          - master
          - develop
      on_success: change  # options: [always|never|change] default: always
      on_failure: always  # options: [always|never|change] default: always
      on_start: never     # options: [always|never|change] default: always

