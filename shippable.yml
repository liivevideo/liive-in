language: node_js

env:
  global:
# deploy-web s3 copy AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY
    - secure: R4nNfH2qQUBS/RkDOjUyEbDSJeL+N9Ra7aFxHUfGs7PE72ZjjojoZTEZkkT9DkkdW4JjqXDw0y+MM6vib7codLUb2ZKggaMW9sMmwy66XCKDDMhy+c3a6DCS++bX2khU3B7Na6b27MSiUskoN1Tm7/qdkONDgCHZcD29nLvy2mLx5Lxo0Zk87+JT5k5pEfnOQeMBWv5+XAD8CIFE1x3zx3taCzhfX2Y5/D4TgRUMwbLUkjTsvhwpNNF8y0dDKXRRrYgB5RcxhEP1wzpaLr+LdphMdvt+EwKUyWwRk6iqkKCOOVFi6PegwklA84pQF/0TnvdqvyrCyanGg4zZnPd8bg==
    - secure: FlhPTLP2CCguj/llRzTb0SBdOTwvaiQ+6vwNMRiitAdhUANWseOnUZB5J/1UTtCSSC0pJvJWgWqUK33UJ5mu5aXTJxO4JV8UCE6EVh3ScAeid4XzbYkVM1sxCSF9zVayhh2fWuRmbZxjan3mrMn7JPITjTQHK71MhDz3/KDoV5q4Amu+JB/R3LSMu1Nr7KX1Of9zdiGW5asjAzhiBDHMbKFGPqJXFUX1JD63CtdW8X59JFn37fXsZpvPqw7A9/gEv8eNzkz4tWhiOeOhTNSnr7O1o66EOSeCx6esjYlvL6ZMPU5zFsRrtxLkHrWtd1CQ7rE4iP+2sNrrBUCTcdk4ZA==

node_js:
   - "6.2.2"

install:
  - pip install awscli

build:
  pre_ci:
    - mkdir -p shippable/testresults
    - mkdir -p shippable/codecoverage

  ci:
    - npm install
    - npm test

  post_ci:
    - npm run-script test-shippable
    - npm run-script test-coverage
    - npm run-script shippable-cobertura

  on_failure:
    - npm run-script test-shippable
    - npm run-script test-coverage
    - npm run-script shippable-cobertura

  on_success:
    - if [ "$BRANCH" == "master" ]; then echo "master build"; fi
    - if [ "$BRANCH" == "deploy-web" ]; then source web/deploy.sh; fi
    - if [ "$BRANCH" == "deploy-android" ]; then source android/deploy.sh; fi
    - if [ "$BRANCH" == "deploy-ios" ]; then source ios/deploy.sh; fi
    - if [ "$BRANCH" == "deploy-server" ]; then source server/deploy.sh; fi
    - if [ "$BRANCH" == "deploy-chromeos" ]; then source chromeos/deploy.sh; fi
    - if [ "$BRANCH" == "publish-web" ]; then source web/publish.sh; fi
    - if [ "$BRANCH" == "publish-android" ]; then source android/publish.sh; fi
    - if [ "$BRANCH" == "publish-ios" ]; then source ios/publish.sh; fi
    - if [ "$BRANCH" == "publish-server" ]; then source server/publish.sh; fi
    - if [ "$BRANCH" == "publish-chromeos" ]; then source chromeos/publish.sh; fi
integrations:
  key:
    - integrationName: HerokuSSHKey
      type: ssh-key

  notifications:
    - integrationName: CINotification
      type: slack
      recipients:
        - "#ci"
      branches:
        only:
          - master
          - develop
      on_success: change
      on_failure: always
      on_start: never

    - integrationName: email
      type: email
      recipients:
        - robb@liivevideo.com
      branches:
        only:
          - master
          - develop
      on_success: change  # options: [always|never|change] default: always
      on_failure: always  # options: [always|never|change] default: always
      on_start: never     # options: [always|never|change] default: always

